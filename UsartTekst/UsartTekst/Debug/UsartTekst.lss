
UsartTekst.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000006ec  00000780  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800066  00800066  00000786  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000786  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000131f  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bc  00000000  00000000  00001bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007d6  00000000  00000000  000025af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00002d88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000511  00000000  00000000  00002f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000098a  00000000  00000000  0000348d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003e17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a6 e6       	ldi	r26, 0x66	; 102
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 37       	cpi	r26, 0x72	; 114
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	a0 e6       	ldi	r26, 0x60	; 96
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	ec ee       	ldi	r30, 0xEC	; 236
  78:	f6 e0       	ldi	r31, 0x06	; 6
  7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
  7c:	05 90       	lpm	r0, Z+
  7e:	0d 92       	st	X+, r0
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b1 07       	cpc	r27, r17
  84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>
  86:	0e 94 43 01 	call	0x286	; 0x286 <main>
  8a:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcdReadAddress>:
  92:	cf 93       	push	r28
  94:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <switchedTo4BitMode>
  98:	88 23       	and	r24, r24
  9a:	71 f0       	breq	.+28     	; 0xb8 <lcdReadAddress+0x26>
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	0e 94 90 00 	call	0x120	; 0x120 <lcdRead>
  a4:	c8 2f       	mov	r28, r24
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	0e 94 90 00 	call	0x120	; 0x120 <lcdRead>
  ae:	c0 7f       	andi	r28, 0xF0	; 240
  b0:	82 95       	swap	r24
  b2:	8f 70       	andi	r24, 0x0F	; 15
  b4:	8c 2b       	or	r24, r28
  b6:	04 c0       	rjmp	.+8      	; 0xc0 <lcdReadAddress+0x2e>
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	0e 94 90 00 	call	0x120	; 0x120 <lcdRead>
  c0:	cf 91       	pop	r28
  c2:	08 95       	ret

000000c4 <lcdWrite>:
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	c8 2f       	mov	r28, r24
  ca:	d6 2f       	mov	r29, r22
  cc:	41 11       	cpse	r20, r1
  ce:	05 c0       	rjmp	.+10     	; 0xda <lcdWrite+0x16>
  d0:	08 c0       	rjmp	.+16     	; 0xe2 <lcdWrite+0x1e>
  d2:	8a e6       	ldi	r24, 0x6A	; 106
  d4:	8a 95       	dec	r24
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcdWrite+0x10>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcdWrite+0x16>
  da:	0e 94 49 00 	call	0x92	; 0x92 <lcdReadAddress>
  de:	88 23       	and	r24, r24
  e0:	c4 f3       	brlt	.-16     	; 0xd2 <lcdWrite+0xe>
  e2:	d9 98       	cbi	0x1b, 1	; 27
  e4:	dd 23       	and	r29, r29
  e6:	11 f0       	breq	.+4      	; 0xec <lcdWrite+0x28>
  e8:	da 9a       	sbi	0x1b, 2	; 27
  ea:	01 c0       	rjmp	.+2      	; 0xee <lcdWrite+0x2a>
  ec:	da 98       	cbi	0x1b, 2	; 27
  ee:	8a b3       	in	r24, 0x1a	; 26
  f0:	80 6f       	ori	r24, 0xF0	; 240
  f2:	8a bb       	out	0x1a, r24	; 26
  f4:	8b b3       	in	r24, 0x1b	; 27
  f6:	9c 2f       	mov	r25, r28
  f8:	9f 60       	ori	r25, 0x0F	; 15
  fa:	89 23       	and	r24, r25
  fc:	8b bb       	out	0x1b, r24	; 27
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	c0 7f       	andi	r28, 0xF0	; 240
 102:	c8 2b       	or	r28, r24
 104:	cb bb       	out	0x1b, r28	; 27
 106:	d8 9a       	sbi	0x1b, 0	; 27
 108:	85 e0       	ldi	r24, 0x05	; 5
 10a:	8a 95       	dec	r24
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcdWrite+0x46>
 10e:	00 00       	nop
 110:	d8 98       	cbi	0x1b, 0	; 27
 112:	85 e0       	ldi	r24, 0x05	; 5
 114:	8a 95       	dec	r24
 116:	f1 f7       	brne	.-4      	; 0x114 <lcdWrite+0x50>
 118:	00 00       	nop
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	08 95       	ret

00000120 <lcdRead>:
 120:	cf 93       	push	r28
 122:	c8 2f       	mov	r28, r24
 124:	61 11       	cpse	r22, r1
 126:	05 c0       	rjmp	.+10     	; 0x132 <lcdRead+0x12>
 128:	08 c0       	rjmp	.+16     	; 0x13a <lcdRead+0x1a>
 12a:	8a e6       	ldi	r24, 0x6A	; 106
 12c:	8a 95       	dec	r24
 12e:	f1 f7       	brne	.-4      	; 0x12c <lcdRead+0xc>
 130:	00 c0       	rjmp	.+0      	; 0x132 <lcdRead+0x12>
 132:	0e 94 49 00 	call	0x92	; 0x92 <lcdReadAddress>
 136:	88 23       	and	r24, r24
 138:	c4 f3       	brlt	.-16     	; 0x12a <lcdRead+0xa>
 13a:	d9 9a       	sbi	0x1b, 1	; 27
 13c:	cc 23       	and	r28, r28
 13e:	11 f0       	breq	.+4      	; 0x144 <lcdRead+0x24>
 140:	da 9a       	sbi	0x1b, 2	; 27
 142:	01 c0       	rjmp	.+2      	; 0x146 <lcdRead+0x26>
 144:	da 98       	cbi	0x1b, 2	; 27
 146:	8a b3       	in	r24, 0x1a	; 26
 148:	8f 70       	andi	r24, 0x0F	; 15
 14a:	8a bb       	out	0x1a, r24	; 26
 14c:	d8 9a       	sbi	0x1b, 0	; 27
 14e:	95 e0       	ldi	r25, 0x05	; 5
 150:	9a 95       	dec	r25
 152:	f1 f7       	brne	.-4      	; 0x150 <lcdRead+0x30>
 154:	00 00       	nop
 156:	89 b3       	in	r24, 0x19	; 25
 158:	d8 98       	cbi	0x1b, 0	; 27
 15a:	95 e0       	ldi	r25, 0x05	; 5
 15c:	9a 95       	dec	r25
 15e:	f1 f7       	brne	.-4      	; 0x15c <lcdRead+0x3c>
 160:	00 00       	nop
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <lcdWriteCommand>:
 166:	cf 93       	push	r28
 168:	c8 2f       	mov	r28, r24
 16a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <switchedTo4BitMode>
 16e:	88 23       	and	r24, r24
 170:	69 f0       	breq	.+26     	; 0x18c <lcdWriteCommand+0x26>
 172:	41 e0       	ldi	r20, 0x01	; 1
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	8c 2f       	mov	r24, r28
 178:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 17c:	40 e0       	ldi	r20, 0x00	; 0
 17e:	60 e0       	ldi	r22, 0x00	; 0
 180:	8c 2f       	mov	r24, r28
 182:	82 95       	swap	r24
 184:	80 7f       	andi	r24, 0xF0	; 240
 186:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 18a:	06 c0       	rjmp	.+12     	; 0x198 <lcdWriteCommand+0x32>
 18c:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <__data_end>
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	8c 2f       	mov	r24, r28
 194:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 198:	cf 91       	pop	r28
 19a:	08 95       	ret

0000019c <lcdWriteData>:
 19c:	cf 93       	push	r28
 19e:	c8 2f       	mov	r28, r24
 1a0:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <switchedTo4BitMode>
 1a4:	88 23       	and	r24, r24
 1a6:	69 f0       	breq	.+26     	; 0x1c2 <lcdWriteData+0x26>
 1a8:	41 e0       	ldi	r20, 0x01	; 1
 1aa:	61 e0       	ldi	r22, 0x01	; 1
 1ac:	8c 2f       	mov	r24, r28
 1ae:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	61 e0       	ldi	r22, 0x01	; 1
 1b6:	8c 2f       	mov	r24, r28
 1b8:	82 95       	swap	r24
 1ba:	80 7f       	andi	r24, 0xF0	; 240
 1bc:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 1c0:	06 c0       	rjmp	.+12     	; 0x1ce <lcdWriteData+0x32>
 1c2:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <__data_end>
 1c6:	61 e0       	ldi	r22, 0x01	; 1
 1c8:	8c 2f       	mov	r24, r28
 1ca:	0e 94 62 00 	call	0xc4	; 0xc4 <lcdWrite>
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <put>:
 1d2:	0e 94 ce 00 	call	0x19c	; 0x19c <lcdWriteData>
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	08 95       	ret

000001dc <lcdInit>:
 1dc:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <switchedTo4BitMode>
 1e0:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__data_end>
 1e4:	d0 9a       	sbi	0x1a, 0	; 26
 1e6:	d1 9a       	sbi	0x1a, 1	; 26
 1e8:	d2 9a       	sbi	0x1a, 2	; 26
 1ea:	8f e5       	ldi	r24, 0x5F	; 95
 1ec:	9a ee       	ldi	r25, 0xEA	; 234
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <lcdInit+0x12>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <lcdInit+0x18>
 1f4:	00 00       	nop
 1f6:	80 e3       	ldi	r24, 0x30	; 48
 1f8:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 1fc:	8f e0       	ldi	r24, 0x0F	; 15
 1fe:	90 e4       	ldi	r25, 0x40	; 64
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <lcdInit+0x24>
 204:	00 c0       	rjmp	.+0      	; 0x206 <lcdInit+0x2a>
 206:	00 00       	nop
 208:	80 e3       	ldi	r24, 0x30	; 48
 20a:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 20e:	8f e8       	ldi	r24, 0x8F	; 143
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <lcdInit+0x36>
 216:	00 c0       	rjmp	.+0      	; 0x218 <lcdInit+0x3c>
 218:	00 00       	nop
 21a:	80 e3       	ldi	r24, 0x30	; 48
 21c:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 220:	8f e9       	ldi	r24, 0x9F	; 159
 222:	9f e0       	ldi	r25, 0x0F	; 15
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <lcdInit+0x48>
 228:	00 c0       	rjmp	.+0      	; 0x22a <lcdInit+0x4e>
 22a:	00 00       	nop
 22c:	80 e2       	ldi	r24, 0x20	; 32
 22e:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 232:	8f e9       	ldi	r24, 0x9F	; 159
 234:	9f e0       	ldi	r25, 0x0F	; 15
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcdInit+0x5a>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcdInit+0x60>
 23c:	00 00       	nop
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <switchedTo4BitMode>
 244:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
 248:	88 e2       	ldi	r24, 0x28	; 40
 24a:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 24e:	88 e0       	ldi	r24, 0x08	; 8
 250:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 25a:	86 e0       	ldi	r24, 0x06	; 6
 25c:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 260:	8c e0       	ldi	r24, 0x0C	; 12
 262:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 266:	08 95       	ret

00000268 <lcdGotoXY>:
 268:	90 e4       	ldi	r25, 0x40	; 64
 26a:	69 9f       	mul	r22, r25
 26c:	80 0d       	add	r24, r0
 26e:	11 24       	eor	r1, r1
 270:	80 68       	ori	r24, 0x80	; 128
 272:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
 276:	08 95       	ret

00000278 <lcdInitPrintf>:
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	89 ee       	ldi	r24, 0xE9	; 233
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 a2 01 	call	0x344	; 0x344 <fdevopen>
 284:	08 95       	ret

00000286 <main>:
#include <avr/io.h>
#include "lcd.h"
#include "usart.h"

int main(void) {
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
 28e:	60 97       	sbiw	r28, 0x10	; 16
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	f8 94       	cli
 294:	de bf       	out	0x3e, r29	; 62
 296:	0f be       	out	0x3f, r0	; 63
 298:	cd bf       	out	0x3d, r28	; 61
	lcdInit();
 29a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <lcdInit>
	lcdInitPrintf();
 29e:	0e 94 3c 01 	call	0x278	; 0x278 <lcdInitPrintf>
	lcdWriteCommand(LCD_COMMAND_ON_OFF | LCD_PARAM_ON_OFF_DISPLAY | LCD_PARAM_ON_OFF_CURSOR);
 2a2:	8e e0       	ldi	r24, 0x0E	; 14
 2a4:	0e 94 b3 00 	call	0x166	; 0x166 <lcdWriteCommand>
	usartInit();
 2a8:	0e 94 9b 01 	call	0x336	; 0x336 <usartInit>
 2ac:	7e 01       	movw	r14, r28
 2ae:	81 e1       	ldi	r24, 0x11	; 17
 2b0:	e8 0e       	add	r14, r24
 2b2:	f1 1c       	adc	r15, r1
 2b4:	fe 01       	movw	r30, r28
 2b6:	31 96       	adiw	r30, 0x01	; 1
	char lineBuffer[16];
	for (uint8_t i = 0; i < 16; i++) {
		lineBuffer[i] = ' ';
 2b8:	80 e2       	ldi	r24, 0x20	; 32
 2ba:	81 93       	st	Z+, r24
	lcdInit();
	lcdInitPrintf();
	lcdWriteCommand(LCD_COMMAND_ON_OFF | LCD_PARAM_ON_OFF_DISPLAY | LCD_PARAM_ON_OFF_CURSOR);
	usartInit();
	char lineBuffer[16];
	for (uint8_t i = 0; i < 16; i++) {
 2bc:	ee 16       	cp	r14, r30
 2be:	ff 06       	cpc	r15, r31
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0x34>
 2c2:	00 e0       	ldi	r16, 0x00	; 0
		lineBuffer[i] = ' ';
	}
	uint8_t cursorPosition = 0;
	while (1) {
		if(UCSRA & _BV(RXC)) {
 2c4:	5f 9b       	sbis	0x0b, 7	; 11
 2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <main+0x3e>
			uint8_t ch = UDR;
 2c8:	1c b1       	in	r17, 0x0c	; 12
			if (ch != '\r') {
 2ca:	1d 30       	cpi	r17, 0x0D	; 13
 2cc:	71 f0       	breq	.+28     	; 0x2ea <main+0x64>
				printf("%c", ch);
 2ce:	81 2f       	mov	r24, r17
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 ed 01 	call	0x3da	; 0x3da <putchar>
				lineBuffer[cursorPosition] = ch;
 2d6:	e1 e0       	ldi	r30, 0x01	; 1
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	ec 0f       	add	r30, r28
 2dc:	fd 1f       	adc	r31, r29
 2de:	e0 0f       	add	r30, r16
 2e0:	f1 1d       	adc	r31, r1
 2e2:	10 83       	st	Z, r17
				cursorPosition++;
 2e4:	0f 5f       	subi	r16, 0xFF	; 255
			}
			if (cursorPosition == 16 || ch == '\r') {
 2e6:	00 31       	cpi	r16, 0x10	; 16
 2e8:	69 f7       	brne	.-38     	; 0x2c4 <main+0x3e>
				cursorPosition = 0;
				lcdGotoXY(0, 0);
 2ea:	60 e0       	ldi	r22, 0x00	; 0
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	0e 94 34 01 	call	0x268	; 0x268 <lcdGotoXY>
 2f2:	8e 01       	movw	r16, r28
 2f4:	0f 5f       	subi	r16, 0xFF	; 255
 2f6:	1f 4f       	sbci	r17, 0xFF	; 255
				for (uint8_t i = 0; i < 16; i++) {
					lcdWriteData(lineBuffer[i]);
 2f8:	f8 01       	movw	r30, r16
 2fa:	81 91       	ld	r24, Z+
 2fc:	8f 01       	movw	r16, r30
 2fe:	0e 94 ce 00 	call	0x19c	; 0x19c <lcdWriteData>
				cursorPosition++;
			}
			if (cursorPosition == 16 || ch == '\r') {
				cursorPosition = 0;
				lcdGotoXY(0, 0);
				for (uint8_t i = 0; i < 16; i++) {
 302:	e0 16       	cp	r14, r16
 304:	f1 06       	cpc	r15, r17
 306:	c1 f7       	brne	.-16     	; 0x2f8 <main+0x72>
					lcdWriteData(lineBuffer[i]);
				}
				lcdGotoXY(0, 1);
 308:	61 e0       	ldi	r22, 0x01	; 1
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 34 01 	call	0x268	; 0x268 <lcdGotoXY>
 310:	8e 01       	movw	r16, r28
 312:	0f 5f       	subi	r16, 0xFF	; 255
 314:	1f 4f       	sbci	r17, 0xFF	; 255
				for (uint8_t i = 0; i < 16; i++) {
					lcdWriteData(' ');
 316:	80 e2       	ldi	r24, 0x20	; 32
 318:	0e 94 ce 00 	call	0x19c	; 0x19c <lcdWriteData>
					lineBuffer[i] = ' ';
 31c:	80 e2       	ldi	r24, 0x20	; 32
 31e:	f8 01       	movw	r30, r16
 320:	81 93       	st	Z+, r24
 322:	8f 01       	movw	r16, r30
				lcdGotoXY(0, 0);
				for (uint8_t i = 0; i < 16; i++) {
					lcdWriteData(lineBuffer[i]);
				}
				lcdGotoXY(0, 1);
				for (uint8_t i = 0; i < 16; i++) {
 324:	ee 15       	cp	r30, r14
 326:	ff 05       	cpc	r31, r15
 328:	b1 f7       	brne	.-20     	; 0x316 <main+0x90>
					lcdWriteData(' ');
					lineBuffer[i] = ' ';
				}
				lcdGotoXY(0, 1);
 32a:	61 e0       	ldi	r22, 0x01	; 1
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	0e 94 34 01 	call	0x268	; 0x268 <lcdGotoXY>
				printf("%c", ch);
				lineBuffer[cursorPosition] = ch;
				cursorPosition++;
			}
			if (cursorPosition == 16 || ch == '\r') {
				cursorPosition = 0;
 332:	00 e0       	ldi	r16, 0x00	; 0
 334:	c7 cf       	rjmp	.-114    	; 0x2c4 <main+0x3e>

00000336 <usartInit>:
 336:	88 e1       	ldi	r24, 0x18	; 24
 338:	8a b9       	out	0x0a, r24	; 10
 33a:	86 e8       	ldi	r24, 0x86	; 134
 33c:	80 bd       	out	0x20, r24	; 32
 33e:	87 e6       	ldi	r24, 0x67	; 103
 340:	89 b9       	out	0x09, r24	; 9
 342:	08 95       	ret

00000344 <fdevopen>:
 344:	0f 93       	push	r16
 346:	1f 93       	push	r17
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	00 97       	sbiw	r24, 0x00	; 0
 34e:	31 f4       	brne	.+12     	; 0x35c <fdevopen+0x18>
 350:	61 15       	cp	r22, r1
 352:	71 05       	cpc	r23, r1
 354:	19 f4       	brne	.+6      	; 0x35c <fdevopen+0x18>
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	3a c0       	rjmp	.+116    	; 0x3d0 <fdevopen+0x8c>
 35c:	8b 01       	movw	r16, r22
 35e:	ec 01       	movw	r28, r24
 360:	6e e0       	ldi	r22, 0x0E	; 14
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <calloc>
 36c:	fc 01       	movw	r30, r24
 36e:	89 2b       	or	r24, r25
 370:	91 f3       	breq	.-28     	; 0x356 <fdevopen+0x12>
 372:	80 e8       	ldi	r24, 0x80	; 128
 374:	83 83       	std	Z+3, r24	; 0x03
 376:	01 15       	cp	r16, r1
 378:	11 05       	cpc	r17, r1
 37a:	71 f0       	breq	.+28     	; 0x398 <fdevopen+0x54>
 37c:	13 87       	std	Z+11, r17	; 0x0b
 37e:	02 87       	std	Z+10, r16	; 0x0a
 380:	81 e8       	ldi	r24, 0x81	; 129
 382:	83 83       	std	Z+3, r24	; 0x03
 384:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__iob>
 388:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__iob+0x1>
 38c:	89 2b       	or	r24, r25
 38e:	21 f4       	brne	.+8      	; 0x398 <fdevopen+0x54>
 390:	f0 93 69 00 	sts	0x0069, r31	; 0x800069 <__iob+0x1>
 394:	e0 93 68 00 	sts	0x0068, r30	; 0x800068 <__iob>
 398:	20 97       	sbiw	r28, 0x00	; 0
 39a:	c9 f0       	breq	.+50     	; 0x3ce <fdevopen+0x8a>
 39c:	d1 87       	std	Z+9, r29	; 0x09
 39e:	c0 87       	std	Z+8, r28	; 0x08
 3a0:	83 81       	ldd	r24, Z+3	; 0x03
 3a2:	82 60       	ori	r24, 0x02	; 2
 3a4:	83 83       	std	Z+3, r24	; 0x03
 3a6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__iob+0x2>
 3aa:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__iob+0x3>
 3ae:	89 2b       	or	r24, r25
 3b0:	71 f4       	brne	.+28     	; 0x3ce <fdevopen+0x8a>
 3b2:	f0 93 6b 00 	sts	0x006B, r31	; 0x80006b <__iob+0x3>
 3b6:	e0 93 6a 00 	sts	0x006A, r30	; 0x80006a <__iob+0x2>
 3ba:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__iob+0x4>
 3be:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__iob+0x5>
 3c2:	89 2b       	or	r24, r25
 3c4:	21 f4       	brne	.+8      	; 0x3ce <fdevopen+0x8a>
 3c6:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <__iob+0x5>
 3ca:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <__iob+0x4>
 3ce:	cf 01       	movw	r24, r30
 3d0:	df 91       	pop	r29
 3d2:	cf 91       	pop	r28
 3d4:	1f 91       	pop	r17
 3d6:	0f 91       	pop	r16
 3d8:	08 95       	ret

000003da <putchar>:
 3da:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <__iob+0x2>
 3de:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <__iob+0x3>
 3e2:	0e 94 38 03 	call	0x670	; 0x670 <fputc>
 3e6:	08 95       	ret

000003e8 <calloc>:
 3e8:	0f 93       	push	r16
 3ea:	1f 93       	push	r17
 3ec:	cf 93       	push	r28
 3ee:	df 93       	push	r29
 3f0:	86 9f       	mul	r24, r22
 3f2:	80 01       	movw	r16, r0
 3f4:	87 9f       	mul	r24, r23
 3f6:	10 0d       	add	r17, r0
 3f8:	96 9f       	mul	r25, r22
 3fa:	10 0d       	add	r17, r0
 3fc:	11 24       	eor	r1, r1
 3fe:	c8 01       	movw	r24, r16
 400:	0e 94 10 02 	call	0x420	; 0x420 <malloc>
 404:	ec 01       	movw	r28, r24
 406:	00 97       	sbiw	r24, 0x00	; 0
 408:	29 f0       	breq	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40a:	a8 01       	movw	r20, r16
 40c:	60 e0       	ldi	r22, 0x00	; 0
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	0e 94 31 03 	call	0x662	; 0x662 <memset>
 414:	ce 01       	movw	r24, r28
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	1f 91       	pop	r17
 41c:	0f 91       	pop	r16
 41e:	08 95       	ret

00000420 <malloc>:
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	82 30       	cpi	r24, 0x02	; 2
 42a:	91 05       	cpc	r25, r1
 42c:	10 f4       	brcc	.+4      	; 0x432 <malloc+0x12>
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <__flp>
 436:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <__flp+0x1>
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	a0 e0       	ldi	r26, 0x00	; 0
 440:	b0 e0       	ldi	r27, 0x00	; 0
 442:	30 97       	sbiw	r30, 0x00	; 0
 444:	19 f1       	breq	.+70     	; 0x48c <malloc+0x6c>
 446:	40 81       	ld	r20, Z
 448:	51 81       	ldd	r21, Z+1	; 0x01
 44a:	02 81       	ldd	r16, Z+2	; 0x02
 44c:	13 81       	ldd	r17, Z+3	; 0x03
 44e:	48 17       	cp	r20, r24
 450:	59 07       	cpc	r21, r25
 452:	c8 f0       	brcs	.+50     	; 0x486 <malloc+0x66>
 454:	84 17       	cp	r24, r20
 456:	95 07       	cpc	r25, r21
 458:	69 f4       	brne	.+26     	; 0x474 <malloc+0x54>
 45a:	10 97       	sbiw	r26, 0x00	; 0
 45c:	31 f0       	breq	.+12     	; 0x46a <malloc+0x4a>
 45e:	12 96       	adiw	r26, 0x02	; 2
 460:	0c 93       	st	X, r16
 462:	12 97       	sbiw	r26, 0x02	; 2
 464:	13 96       	adiw	r26, 0x03	; 3
 466:	1c 93       	st	X, r17
 468:	27 c0       	rjmp	.+78     	; 0x4b8 <malloc+0x98>
 46a:	00 93 70 00 	sts	0x0070, r16	; 0x800070 <__flp>
 46e:	10 93 71 00 	sts	0x0071, r17	; 0x800071 <__flp+0x1>
 472:	22 c0       	rjmp	.+68     	; 0x4b8 <malloc+0x98>
 474:	21 15       	cp	r18, r1
 476:	31 05       	cpc	r19, r1
 478:	19 f0       	breq	.+6      	; 0x480 <malloc+0x60>
 47a:	42 17       	cp	r20, r18
 47c:	53 07       	cpc	r21, r19
 47e:	18 f4       	brcc	.+6      	; 0x486 <malloc+0x66>
 480:	9a 01       	movw	r18, r20
 482:	bd 01       	movw	r22, r26
 484:	ef 01       	movw	r28, r30
 486:	df 01       	movw	r26, r30
 488:	f8 01       	movw	r30, r16
 48a:	db cf       	rjmp	.-74     	; 0x442 <malloc+0x22>
 48c:	21 15       	cp	r18, r1
 48e:	31 05       	cpc	r19, r1
 490:	f9 f0       	breq	.+62     	; 0x4d0 <malloc+0xb0>
 492:	28 1b       	sub	r18, r24
 494:	39 0b       	sbc	r19, r25
 496:	24 30       	cpi	r18, 0x04	; 4
 498:	31 05       	cpc	r19, r1
 49a:	80 f4       	brcc	.+32     	; 0x4bc <malloc+0x9c>
 49c:	8a 81       	ldd	r24, Y+2	; 0x02
 49e:	9b 81       	ldd	r25, Y+3	; 0x03
 4a0:	61 15       	cp	r22, r1
 4a2:	71 05       	cpc	r23, r1
 4a4:	21 f0       	breq	.+8      	; 0x4ae <malloc+0x8e>
 4a6:	fb 01       	movw	r30, r22
 4a8:	93 83       	std	Z+3, r25	; 0x03
 4aa:	82 83       	std	Z+2, r24	; 0x02
 4ac:	04 c0       	rjmp	.+8      	; 0x4b6 <malloc+0x96>
 4ae:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <__flp+0x1>
 4b2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__flp>
 4b6:	fe 01       	movw	r30, r28
 4b8:	32 96       	adiw	r30, 0x02	; 2
 4ba:	44 c0       	rjmp	.+136    	; 0x544 <malloc+0x124>
 4bc:	fe 01       	movw	r30, r28
 4be:	e2 0f       	add	r30, r18
 4c0:	f3 1f       	adc	r31, r19
 4c2:	81 93       	st	Z+, r24
 4c4:	91 93       	st	Z+, r25
 4c6:	22 50       	subi	r18, 0x02	; 2
 4c8:	31 09       	sbc	r19, r1
 4ca:	39 83       	std	Y+1, r19	; 0x01
 4cc:	28 83       	st	Y, r18
 4ce:	3a c0       	rjmp	.+116    	; 0x544 <malloc+0x124>
 4d0:	20 91 6e 00 	lds	r18, 0x006E	; 0x80006e <__brkval>
 4d4:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <__brkval+0x1>
 4d8:	23 2b       	or	r18, r19
 4da:	41 f4       	brne	.+16     	; 0x4ec <malloc+0xcc>
 4dc:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 4e0:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 4e4:	30 93 6f 00 	sts	0x006F, r19	; 0x80006f <__brkval+0x1>
 4e8:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__brkval>
 4ec:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 4f0:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 4f4:	21 15       	cp	r18, r1
 4f6:	31 05       	cpc	r19, r1
 4f8:	41 f4       	brne	.+16     	; 0x50a <malloc+0xea>
 4fa:	2d b7       	in	r18, 0x3d	; 61
 4fc:	3e b7       	in	r19, 0x3e	; 62
 4fe:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 502:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 506:	24 1b       	sub	r18, r20
 508:	35 0b       	sbc	r19, r21
 50a:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__brkval>
 50e:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__brkval+0x1>
 512:	e2 17       	cp	r30, r18
 514:	f3 07       	cpc	r31, r19
 516:	a0 f4       	brcc	.+40     	; 0x540 <malloc+0x120>
 518:	2e 1b       	sub	r18, r30
 51a:	3f 0b       	sbc	r19, r31
 51c:	28 17       	cp	r18, r24
 51e:	39 07       	cpc	r19, r25
 520:	78 f0       	brcs	.+30     	; 0x540 <malloc+0x120>
 522:	ac 01       	movw	r20, r24
 524:	4e 5f       	subi	r20, 0xFE	; 254
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	24 17       	cp	r18, r20
 52a:	35 07       	cpc	r19, r21
 52c:	48 f0       	brcs	.+18     	; 0x540 <malloc+0x120>
 52e:	4e 0f       	add	r20, r30
 530:	5f 1f       	adc	r21, r31
 532:	50 93 6f 00 	sts	0x006F, r21	; 0x80006f <__brkval+0x1>
 536:	40 93 6e 00 	sts	0x006E, r20	; 0x80006e <__brkval>
 53a:	81 93       	st	Z+, r24
 53c:	91 93       	st	Z+, r25
 53e:	02 c0       	rjmp	.+4      	; 0x544 <malloc+0x124>
 540:	e0 e0       	ldi	r30, 0x00	; 0
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	cf 01       	movw	r24, r30
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	1f 91       	pop	r17
 54c:	0f 91       	pop	r16
 54e:	08 95       	ret

00000550 <free>:
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	00 97       	sbiw	r24, 0x00	; 0
 556:	09 f4       	brne	.+2      	; 0x55a <free+0xa>
 558:	81 c0       	rjmp	.+258    	; 0x65c <free+0x10c>
 55a:	fc 01       	movw	r30, r24
 55c:	32 97       	sbiw	r30, 0x02	; 2
 55e:	13 82       	std	Z+3, r1	; 0x03
 560:	12 82       	std	Z+2, r1	; 0x02
 562:	a0 91 70 00 	lds	r26, 0x0070	; 0x800070 <__flp>
 566:	b0 91 71 00 	lds	r27, 0x0071	; 0x800071 <__flp+0x1>
 56a:	10 97       	sbiw	r26, 0x00	; 0
 56c:	81 f4       	brne	.+32     	; 0x58e <free+0x3e>
 56e:	20 81       	ld	r18, Z
 570:	31 81       	ldd	r19, Z+1	; 0x01
 572:	82 0f       	add	r24, r18
 574:	93 1f       	adc	r25, r19
 576:	20 91 6e 00 	lds	r18, 0x006E	; 0x80006e <__brkval>
 57a:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <__brkval+0x1>
 57e:	28 17       	cp	r18, r24
 580:	39 07       	cpc	r19, r25
 582:	51 f5       	brne	.+84     	; 0x5d8 <free+0x88>
 584:	f0 93 6f 00 	sts	0x006F, r31	; 0x80006f <__brkval+0x1>
 588:	e0 93 6e 00 	sts	0x006E, r30	; 0x80006e <__brkval>
 58c:	67 c0       	rjmp	.+206    	; 0x65c <free+0x10c>
 58e:	ed 01       	movw	r28, r26
 590:	20 e0       	ldi	r18, 0x00	; 0
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	ce 17       	cp	r28, r30
 596:	df 07       	cpc	r29, r31
 598:	40 f4       	brcc	.+16     	; 0x5aa <free+0x5a>
 59a:	4a 81       	ldd	r20, Y+2	; 0x02
 59c:	5b 81       	ldd	r21, Y+3	; 0x03
 59e:	9e 01       	movw	r18, r28
 5a0:	41 15       	cp	r20, r1
 5a2:	51 05       	cpc	r21, r1
 5a4:	f1 f0       	breq	.+60     	; 0x5e2 <free+0x92>
 5a6:	ea 01       	movw	r28, r20
 5a8:	f5 cf       	rjmp	.-22     	; 0x594 <free+0x44>
 5aa:	d3 83       	std	Z+3, r29	; 0x03
 5ac:	c2 83       	std	Z+2, r28	; 0x02
 5ae:	40 81       	ld	r20, Z
 5b0:	51 81       	ldd	r21, Z+1	; 0x01
 5b2:	84 0f       	add	r24, r20
 5b4:	95 1f       	adc	r25, r21
 5b6:	c8 17       	cp	r28, r24
 5b8:	d9 07       	cpc	r29, r25
 5ba:	59 f4       	brne	.+22     	; 0x5d2 <free+0x82>
 5bc:	88 81       	ld	r24, Y
 5be:	99 81       	ldd	r25, Y+1	; 0x01
 5c0:	84 0f       	add	r24, r20
 5c2:	95 1f       	adc	r25, r21
 5c4:	02 96       	adiw	r24, 0x02	; 2
 5c6:	91 83       	std	Z+1, r25	; 0x01
 5c8:	80 83       	st	Z, r24
 5ca:	8a 81       	ldd	r24, Y+2	; 0x02
 5cc:	9b 81       	ldd	r25, Y+3	; 0x03
 5ce:	93 83       	std	Z+3, r25	; 0x03
 5d0:	82 83       	std	Z+2, r24	; 0x02
 5d2:	21 15       	cp	r18, r1
 5d4:	31 05       	cpc	r19, r1
 5d6:	29 f4       	brne	.+10     	; 0x5e2 <free+0x92>
 5d8:	f0 93 71 00 	sts	0x0071, r31	; 0x800071 <__flp+0x1>
 5dc:	e0 93 70 00 	sts	0x0070, r30	; 0x800070 <__flp>
 5e0:	3d c0       	rjmp	.+122    	; 0x65c <free+0x10c>
 5e2:	e9 01       	movw	r28, r18
 5e4:	fb 83       	std	Y+3, r31	; 0x03
 5e6:	ea 83       	std	Y+2, r30	; 0x02
 5e8:	49 91       	ld	r20, Y+
 5ea:	59 91       	ld	r21, Y+
 5ec:	c4 0f       	add	r28, r20
 5ee:	d5 1f       	adc	r29, r21
 5f0:	ec 17       	cp	r30, r28
 5f2:	fd 07       	cpc	r31, r29
 5f4:	61 f4       	brne	.+24     	; 0x60e <free+0xbe>
 5f6:	80 81       	ld	r24, Z
 5f8:	91 81       	ldd	r25, Z+1	; 0x01
 5fa:	84 0f       	add	r24, r20
 5fc:	95 1f       	adc	r25, r21
 5fe:	02 96       	adiw	r24, 0x02	; 2
 600:	e9 01       	movw	r28, r18
 602:	99 83       	std	Y+1, r25	; 0x01
 604:	88 83       	st	Y, r24
 606:	82 81       	ldd	r24, Z+2	; 0x02
 608:	93 81       	ldd	r25, Z+3	; 0x03
 60a:	9b 83       	std	Y+3, r25	; 0x03
 60c:	8a 83       	std	Y+2, r24	; 0x02
 60e:	e0 e0       	ldi	r30, 0x00	; 0
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	12 96       	adiw	r26, 0x02	; 2
 614:	8d 91       	ld	r24, X+
 616:	9c 91       	ld	r25, X
 618:	13 97       	sbiw	r26, 0x03	; 3
 61a:	00 97       	sbiw	r24, 0x00	; 0
 61c:	19 f0       	breq	.+6      	; 0x624 <free+0xd4>
 61e:	fd 01       	movw	r30, r26
 620:	dc 01       	movw	r26, r24
 622:	f7 cf       	rjmp	.-18     	; 0x612 <free+0xc2>
 624:	8d 91       	ld	r24, X+
 626:	9c 91       	ld	r25, X
 628:	11 97       	sbiw	r26, 0x01	; 1
 62a:	9d 01       	movw	r18, r26
 62c:	2e 5f       	subi	r18, 0xFE	; 254
 62e:	3f 4f       	sbci	r19, 0xFF	; 255
 630:	82 0f       	add	r24, r18
 632:	93 1f       	adc	r25, r19
 634:	20 91 6e 00 	lds	r18, 0x006E	; 0x80006e <__brkval>
 638:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <__brkval+0x1>
 63c:	28 17       	cp	r18, r24
 63e:	39 07       	cpc	r19, r25
 640:	69 f4       	brne	.+26     	; 0x65c <free+0x10c>
 642:	30 97       	sbiw	r30, 0x00	; 0
 644:	29 f4       	brne	.+10     	; 0x650 <free+0x100>
 646:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__flp+0x1>
 64a:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__flp>
 64e:	02 c0       	rjmp	.+4      	; 0x654 <free+0x104>
 650:	13 82       	std	Z+3, r1	; 0x03
 652:	12 82       	std	Z+2, r1	; 0x02
 654:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <__brkval+0x1>
 658:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <__brkval>
 65c:	df 91       	pop	r29
 65e:	cf 91       	pop	r28
 660:	08 95       	ret

00000662 <memset>:
 662:	dc 01       	movw	r26, r24
 664:	01 c0       	rjmp	.+2      	; 0x668 <memset+0x6>
 666:	6d 93       	st	X+, r22
 668:	41 50       	subi	r20, 0x01	; 1
 66a:	50 40       	sbci	r21, 0x00	; 0
 66c:	e0 f7       	brcc	.-8      	; 0x666 <memset+0x4>
 66e:	08 95       	ret

00000670 <fputc>:
 670:	0f 93       	push	r16
 672:	1f 93       	push	r17
 674:	cf 93       	push	r28
 676:	df 93       	push	r29
 678:	fb 01       	movw	r30, r22
 67a:	23 81       	ldd	r18, Z+3	; 0x03
 67c:	21 fd       	sbrc	r18, 1
 67e:	03 c0       	rjmp	.+6      	; 0x686 <fputc+0x16>
 680:	8f ef       	ldi	r24, 0xFF	; 255
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	2c c0       	rjmp	.+88     	; 0x6de <fputc+0x6e>
 686:	22 ff       	sbrs	r18, 2
 688:	16 c0       	rjmp	.+44     	; 0x6b6 <fputc+0x46>
 68a:	46 81       	ldd	r20, Z+6	; 0x06
 68c:	57 81       	ldd	r21, Z+7	; 0x07
 68e:	24 81       	ldd	r18, Z+4	; 0x04
 690:	35 81       	ldd	r19, Z+5	; 0x05
 692:	42 17       	cp	r20, r18
 694:	53 07       	cpc	r21, r19
 696:	44 f4       	brge	.+16     	; 0x6a8 <fputc+0x38>
 698:	a0 81       	ld	r26, Z
 69a:	b1 81       	ldd	r27, Z+1	; 0x01
 69c:	9d 01       	movw	r18, r26
 69e:	2f 5f       	subi	r18, 0xFF	; 255
 6a0:	3f 4f       	sbci	r19, 0xFF	; 255
 6a2:	31 83       	std	Z+1, r19	; 0x01
 6a4:	20 83       	st	Z, r18
 6a6:	8c 93       	st	X, r24
 6a8:	26 81       	ldd	r18, Z+6	; 0x06
 6aa:	37 81       	ldd	r19, Z+7	; 0x07
 6ac:	2f 5f       	subi	r18, 0xFF	; 255
 6ae:	3f 4f       	sbci	r19, 0xFF	; 255
 6b0:	37 83       	std	Z+7, r19	; 0x07
 6b2:	26 83       	std	Z+6, r18	; 0x06
 6b4:	14 c0       	rjmp	.+40     	; 0x6de <fputc+0x6e>
 6b6:	8b 01       	movw	r16, r22
 6b8:	ec 01       	movw	r28, r24
 6ba:	fb 01       	movw	r30, r22
 6bc:	00 84       	ldd	r0, Z+8	; 0x08
 6be:	f1 85       	ldd	r31, Z+9	; 0x09
 6c0:	e0 2d       	mov	r30, r0
 6c2:	09 95       	icall
 6c4:	89 2b       	or	r24, r25
 6c6:	e1 f6       	brne	.-72     	; 0x680 <fputc+0x10>
 6c8:	d8 01       	movw	r26, r16
 6ca:	16 96       	adiw	r26, 0x06	; 6
 6cc:	8d 91       	ld	r24, X+
 6ce:	9c 91       	ld	r25, X
 6d0:	17 97       	sbiw	r26, 0x07	; 7
 6d2:	01 96       	adiw	r24, 0x01	; 1
 6d4:	17 96       	adiw	r26, 0x07	; 7
 6d6:	9c 93       	st	X, r25
 6d8:	8e 93       	st	-X, r24
 6da:	16 97       	sbiw	r26, 0x06	; 6
 6dc:	ce 01       	movw	r24, r28
 6de:	df 91       	pop	r29
 6e0:	cf 91       	pop	r28
 6e2:	1f 91       	pop	r17
 6e4:	0f 91       	pop	r16
 6e6:	08 95       	ret

000006e8 <_exit>:
 6e8:	f8 94       	cli

000006ea <__stop_program>:
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <__stop_program>
